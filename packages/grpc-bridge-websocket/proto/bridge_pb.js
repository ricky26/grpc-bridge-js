// source: bridge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Call', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Close', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Message', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Message.MessageCase', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Metadata', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Metadata.Item', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Payload', null, global);
goog.exportSymbol('proto.games.wellplayed.grpcbridge.v1.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Call = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Call, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Call.displayName = 'proto.games.wellplayed.grpcbridge.v1.Call';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.games.wellplayed.grpcbridge.v1.Metadata.repeatedFields_, null);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Metadata.displayName = 'proto.games.wellplayed.grpcbridge.v1.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.games.wellplayed.grpcbridge.v1.Metadata.Item.repeatedFields_, null);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Metadata.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Metadata.Item.displayName = 'proto.games.wellplayed.grpcbridge.v1.Metadata.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Payload.displayName = 'proto.games.wellplayed.grpcbridge.v1.Payload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.games.wellplayed.grpcbridge.v1.Status.repeatedFields_, null);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Status.displayName = 'proto.games.wellplayed.grpcbridge.v1.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Close = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Close, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Close.displayName = 'proto.games.wellplayed.grpcbridge.v1.Close';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.games.wellplayed.grpcbridge.v1.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_);
};
goog.inherits(proto.games.wellplayed.grpcbridge.v1.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.games.wellplayed.grpcbridge.v1.Message.displayName = 'proto.games.wellplayed.grpcbridge.v1.Message';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Call.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Call.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Call} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Call.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Call}
 */
proto.games.wellplayed.grpcbridge.v1.Call.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Call;
  return proto.games.wellplayed.grpcbridge.v1.Call.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Call} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Call}
 */
proto.games.wellplayed.grpcbridge.v1.Call.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Call.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Call.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Call} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Call.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string method = 1;
 * @return {string}
 */
proto.games.wellplayed.grpcbridge.v1.Call.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Call} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Call.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadataList: jspb.Message.toObjectList(msg.getMetadataList(),
    proto.games.wellplayed.grpcbridge.v1.Metadata.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Metadata;
  return proto.games.wellplayed.grpcbridge.v1.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.games.wellplayed.grpcbridge.v1.Metadata.Item;
      reader.readMessage(value,proto.games.wellplayed.grpcbridge.v1.Metadata.Item.deserializeBinaryFromReader);
      msg.addMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.games.wellplayed.grpcbridge.v1.Metadata.Item.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Metadata.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valueList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Metadata.Item;
  return proto.games.wellplayed.grpcbridge.v1.Metadata.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Metadata.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string value = 2;
 * @return {!Array<string>}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.getValueList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.setValueList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.addValue = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.Item.prototype.clearValueList = function() {
  return this.setValueList([]);
};


/**
 * repeated Item metadata = 1;
 * @return {!Array<!proto.games.wellplayed.grpcbridge.v1.Metadata.Item>}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.prototype.getMetadataList = function() {
  return /** @type{!Array<!proto.games.wellplayed.grpcbridge.v1.Metadata.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.games.wellplayed.grpcbridge.v1.Metadata.Item, 1));
};


/**
 * @param {!Array<!proto.games.wellplayed.grpcbridge.v1.Metadata.Item>} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Metadata.prototype.setMetadataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata.Item}
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.prototype.addMetadata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.games.wellplayed.grpcbridge.v1.Metadata.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Metadata} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Metadata.prototype.clearMetadataList = function() {
  return this.setMetadataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Payload}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Payload;
  return proto.games.wellplayed.grpcbridge.v1.Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Payload}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes payload = 1;
 * @return {string}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payload = 1;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Payload.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Payload} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Payload.prototype.setPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.games.wellplayed.grpcbridge.v1.Status.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    detailsList: jspb.Message.toObjectList(msg.getDetailsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Status}
 */
proto.games.wellplayed.grpcbridge.v1.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Status;
  return proto.games.wellplayed.grpcbridge.v1.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Status}
 */
proto.games.wellplayed.grpcbridge.v1.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Status} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Status} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated google.protobuf.Any details = 3;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.getDetailsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Status} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Status.prototype.setDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.addDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Status} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Status.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Close.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Close.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Close} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Close.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Close}
 */
proto.games.wellplayed.grpcbridge.v1.Close.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Close;
  return proto.games.wellplayed.grpcbridge.v1.Close.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Close} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Close}
 */
proto.games.wellplayed.grpcbridge.v1.Close.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Close.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Close.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Close} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Close.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_ = [[2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.games.wellplayed.grpcbridge.v1.Message.MessageCase = {
  MESSAGE_NOT_SET: 0,
  CALL: 2,
  METADATA: 3,
  PAYLOAD: 4,
  STATUS: 5,
  CLOSE: 6
};

/**
 * @return {proto.games.wellplayed.grpcbridge.v1.Message.MessageCase}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getMessageCase = function() {
  return /** @type {proto.games.wellplayed.grpcbridge.v1.Message.MessageCase} */(jspb.Message.computeOneofCase(this, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.games.wellplayed.grpcbridge.v1.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.games.wellplayed.grpcbridge.v1.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    streamId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    call: (f = msg.getCall()) && proto.games.wellplayed.grpcbridge.v1.Call.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.games.wellplayed.grpcbridge.v1.Metadata.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.games.wellplayed.grpcbridge.v1.Payload.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.games.wellplayed.grpcbridge.v1.Status.toObject(includeInstance, f),
    close: (f = msg.getClose()) && proto.games.wellplayed.grpcbridge.v1.Close.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message}
 */
proto.games.wellplayed.grpcbridge.v1.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.games.wellplayed.grpcbridge.v1.Message;
  return proto.games.wellplayed.grpcbridge.v1.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message}
 */
proto.games.wellplayed.grpcbridge.v1.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStreamId(value);
      break;
    case 2:
      var value = new proto.games.wellplayed.grpcbridge.v1.Call;
      reader.readMessage(value,proto.games.wellplayed.grpcbridge.v1.Call.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 3:
      var value = new proto.games.wellplayed.grpcbridge.v1.Metadata;
      reader.readMessage(value,proto.games.wellplayed.grpcbridge.v1.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 4:
      var value = new proto.games.wellplayed.grpcbridge.v1.Payload;
      reader.readMessage(value,proto.games.wellplayed.grpcbridge.v1.Payload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 5:
      var value = new proto.games.wellplayed.grpcbridge.v1.Status;
      reader.readMessage(value,proto.games.wellplayed.grpcbridge.v1.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 6:
      var value = new proto.games.wellplayed.grpcbridge.v1.Close;
      reader.readMessage(value,proto.games.wellplayed.grpcbridge.v1.Close.deserializeBinaryFromReader);
      msg.setClose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.games.wellplayed.grpcbridge.v1.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.games.wellplayed.grpcbridge.v1.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.games.wellplayed.grpcbridge.v1.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStreamId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.games.wellplayed.grpcbridge.v1.Call.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.games.wellplayed.grpcbridge.v1.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.games.wellplayed.grpcbridge.v1.Payload.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.games.wellplayed.grpcbridge.v1.Status.serializeBinaryToWriter
    );
  }
  f = message.getClose();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.games.wellplayed.grpcbridge.v1.Close.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 stream_id = 1;
 * @return {number}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getStreamId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.setStreamId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Call call = 2;
 * @return {?proto.games.wellplayed.grpcbridge.v1.Call}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getCall = function() {
  return /** @type{?proto.games.wellplayed.grpcbridge.v1.Call} */ (
    jspb.Message.getWrapperField(this, proto.games.wellplayed.grpcbridge.v1.Call, 2));
};


/**
 * @param {?proto.games.wellplayed.grpcbridge.v1.Call|undefined} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Message.prototype.setCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.hasCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Metadata metadata = 3;
 * @return {?proto.games.wellplayed.grpcbridge.v1.Metadata}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getMetadata = function() {
  return /** @type{?proto.games.wellplayed.grpcbridge.v1.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.games.wellplayed.grpcbridge.v1.Metadata, 3));
};


/**
 * @param {?proto.games.wellplayed.grpcbridge.v1.Metadata|undefined} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Message.prototype.setMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Payload payload = 4;
 * @return {?proto.games.wellplayed.grpcbridge.v1.Payload}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getPayload = function() {
  return /** @type{?proto.games.wellplayed.grpcbridge.v1.Payload} */ (
    jspb.Message.getWrapperField(this, proto.games.wellplayed.grpcbridge.v1.Payload, 4));
};


/**
 * @param {?proto.games.wellplayed.grpcbridge.v1.Payload|undefined} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Message.prototype.setPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Status status = 5;
 * @return {?proto.games.wellplayed.grpcbridge.v1.Status}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getStatus = function() {
  return /** @type{?proto.games.wellplayed.grpcbridge.v1.Status} */ (
    jspb.Message.getWrapperField(this, proto.games.wellplayed.grpcbridge.v1.Status, 5));
};


/**
 * @param {?proto.games.wellplayed.grpcbridge.v1.Status|undefined} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Message.prototype.setStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Close close = 6;
 * @return {?proto.games.wellplayed.grpcbridge.v1.Close}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.getClose = function() {
  return /** @type{?proto.games.wellplayed.grpcbridge.v1.Close} */ (
    jspb.Message.getWrapperField(this, proto.games.wellplayed.grpcbridge.v1.Close, 6));
};


/**
 * @param {?proto.games.wellplayed.grpcbridge.v1.Close|undefined} value
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
*/
proto.games.wellplayed.grpcbridge.v1.Message.prototype.setClose = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.games.wellplayed.grpcbridge.v1.Message.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.games.wellplayed.grpcbridge.v1.Message} returns this
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.clearClose = function() {
  return this.setClose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.games.wellplayed.grpcbridge.v1.Message.prototype.hasClose = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.games.wellplayed.grpcbridge.v1);
